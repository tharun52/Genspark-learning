az acr create --resource-group tharun-rg --name tharuncontainerregistry --sku Standard --dnl-scope TenantReuse

{
  "adminUserEnabled": false,
  "anonymousPullEnabled": false,
  "autoGeneratedDomainNameLabelScope": "TenantReuse",
  "creationDate": "2025-07-17T07:27:42.109336+00:00",
  "dataEndpointEnabled": false,
  "dataEndpointHostNames": [],
  "encryption": {
    "keyVaultProperties": null,
    "status": "disabled"
  },
  "id": "/subscriptions/fff309a9-2887-407d-b64d-e074e3d92e5b/resourceGroups/tharun-rg/providers/Microsoft.ContainerRegistry/registries/tharuncontainerregistry",
  "identity": null,
  "location": "eastus",
  "loginServer": "tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io",
  "metadataSearch": "Disabled",
  "name": "tharuncontainerregistry",
  "networkRuleBypassOptions": "AzureServices",
  "networkRuleSet": null,
  "policies": {
    "azureAdAuthenticationAsArmPolicy": {
      "status": "enabled"
    },
    "exportPolicy": {
      "status": "enabled"
    },
    "quarantinePolicy": {
      "status": "disabled"
    },
    "retentionPolicy": {
      "days": 7,
      "lastUpdatedTime": "2025-07-17T07:27:48.806330+00:00",
      "status": "disabled"
    },
    "softDeletePolicy": {
      "lastUpdatedTime": "2025-07-17T07:27:48.806370+00:00",
      "retentionDays": 7,
      "status": "disabled"
    },
    "trustPolicy": {
      "status": "disabled",
      "type": "Notary"
    }
  },
  "privateEndpointConnections": [],
  "provisioningState": "Succeeded",
  "publicNetworkAccess": "Enabled",
  "resourceGroup": "tharun-rg",
  "roleAssignmentMode": "LegacyRegistryPermissions",
  "sku": {
    "name": "Standard",
    "tier": "Standard"
  },
  "status": null,
  "systemData": {
    "createdAt": "2025-07-17T07:27:42.109336+00:00",
    "createdBy": "tharune@presidio.com",
    "createdByType": "User",
    "lastModifiedAt": "2025-07-17T07:27:42.109336+00:00",
    "lastModifiedBy": "tharune@presidio.com",
    "lastModifiedByType": "User"
  },
  "tags": {},
  "type": "Microsoft.ContainerRegistry/registries",
  "zoneRedundancy": "Disabled"
}




az acr login --name tharuncontainerregistry


docker pull mcr.microsoft.com/hello-world

docker tag mcr.microsoft.com/hello-world tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1

docker push tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1 

docker rmi tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1

az acr repository list --name tharuncontainerregistry --output table
    Result
    -----------
    hello-world

docker run tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1
    Unable to find image 'tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1' locally
    v1: Pulling from hello-world
    Digest: sha256:92c7f9c92844bbbb5d0a101b22f7c2a7949e40f8ea90c8b3bc396879d95e899a
    Status: Downloaded newer image for tharuncontainerregistry-hbgbepfketfncaaa.azurecr.io/hello-world:v1
    WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested

    Hello from Docker!
    This message shows that your installation appears to be working correctly.

    To generate this message, Docker took the following steps:
    1. The Docker client contacted the Docker daemon.
    2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
        (amd64)
    3. The Docker daemon created a new container from that image which runs the
        executable that produces the output you are currently reading.
    4. The Docker daemon streamed that output to the Docker client, which sent it
        to your terminal.

    To try something more ambitious, you can run an Ubuntu container with:
    $ docker run -it ubuntu bash

    Share images, automate workflows, and more with a free Docker ID:
    https://hub.docker.com/

    For more examples and ideas, visit:
    https://docs.docker.com/get-started/